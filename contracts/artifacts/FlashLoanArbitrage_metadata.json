{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_addressProvider",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_uniswapRouterAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_sushiswapRouterAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_weth",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_dai",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "ADDRESSES_PROVIDER",
				"outputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract IPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "daiAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "premium",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "initiator",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "executeOperation",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "flashloan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "assets",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					}
				],
				"name": "flashloan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_erc20Address",
						"type": "address"
					}
				],
				"name": "getERC20Balance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "makeArbitrage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sushiswapRouterAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapRouterAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wethAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"details": "Ensure that the contract can return the debt + premium, e.g., has      enough funds to repay and has approved the Pool to pull the total amount",
					"params": {
						"amount": "The amount of the flash-borrowed asset",
						"asset": "The address of the flash-borrowed asset",
						"initiator": "The address of the flashloan initiator",
						"params": "The byte-encoded params passed when initiating the flashloan",
						"premium": "The fee of the flash-borrowed asset"
					},
					"returns": {
						"_0": "True if the execution of the operation succeeds, false otherwise"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"executeOperation(address,uint256,uint256,address,bytes)": {
					"notice": "Executes an operation after receiving the flash-borrowed asset"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Aaveloan2.sol": "FlashLoanArbitrage"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol": {
			"keccak256": "0xf57d62241e553696a1324d225663ba2e1a51db0a51ca236d0c1b009d89b6284c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://d327db93b636790909aa137124f30a856ac1631cb79c476aa188f9627fda8d03",
				"dweb:/ipfs/QmaxpmEoBFioeNYmpxJemyZ7aYF2nX1NKW1XDqREm7i6es"
			]
		},
		"@aave/core-v3/contracts/flashloan/base/FlashLoanSimpleReceiverBase.sol": {
			"keccak256": "0x295cc551c03e55a0b119fc671a12cf9afa07caad58ffbc62bcdb90ab2769e1a4",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://a3334ff48b620e4eb2d8f7750b1928e74f5c70ac49e19f6a87c267caf63b3024",
				"dweb:/ipfs/QmU74znMLDtzxJQkmCmf98qRekRECuT7P6FJL89QjwM4qc"
			]
		},
		"@aave/core-v3/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol": {
			"keccak256": "0xba50a7834ddfdca3e3cfac09043f72699be42ff88925641ac30950a434b2b2ff",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://588513e813da8c9edf06bdd8912f33f5e304735e4b0145da9fb034eb46f205b5",
				"dweb:/ipfs/Qmco68eeRnTUGyZaoZ9Vu4R7xzH9x1pUwP36nUvrxnxHxg"
			]
		},
		"@aave/core-v3/contracts/interfaces/IPool.sol": {
			"keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
				"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
			]
		},
		"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
			"keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
				"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
			]
		},
		"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0xff95adc41b2bbda0c08208e66c1e2fd0d99fa6d8f937667c2b366ddf08f10eeb",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://734ac1a253d41ace0fe411359248a1534e530b85b3c0c9fe37931ee11580dbc6",
				"dweb:/ipfs/QmNSm1bqFo2x8EghUyShK34bU1esDeLCw1ZWPoRZwcoVvM"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
				"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
			"license": "MIT",
			"urls": [
				"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
				"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
			]
		},
		"contracts/Aaveloan2.sol": {
			"keccak256": "0x919161632a6427df429d709dae758505f9bbad0e45a9440f443b2bb7e3402732",
			"license": "MIT",
			"urls": [
				"bzz-raw://86b9f9934de5fb8935f6a779c207a1b21e7cd8a708b06585af626f79daeca63d",
				"dweb:/ipfs/QmRPALPfaYhw8LhX2hBAgiK5FXp4qtGYf9Qu41FLT7v6bq"
			]
		},
		"contracts/interfaces/IUniswapV2Pair.sol": {
			"keccak256": "0x5fdf7aa8e5fda3bc6afafd4091f9749c2e6921dd929ccd725e5b50e49dece080",
			"license": "MIT",
			"urls": [
				"bzz-raw://1f767ae941cc9d435ed7a19c31b7f1c8d98968a1beee54fae836681404da0f9c",
				"dweb:/ipfs/QmPyA8uQwh5nR7gFBVz9QRMnwvTcbNXQJYCweYCgqhdza4"
			]
		},
		"contracts/interfaces/IUniswapV2Router01.sol": {
			"keccak256": "0x2b2ebe1729859773520dbbb629daf54833c6573fcc3223d2f165d54d5e6b624c",
			"license": "MIT",
			"urls": [
				"bzz-raw://12fbce49678d9baddb1de53abf89c294137cd5ee5498bbaff255b02b70e991b2",
				"dweb:/ipfs/QmQgxCtqUEzjqz8f1eAKKjWMTLENxcsRRLCu5Yd54esQRj"
			]
		},
		"contracts/interfaces/IUniswapV2Router02.sol": {
			"keccak256": "0x2589fad5efa8bb57c376895408f3b8ddf7736a00a52ec2caf16a32811aab8c7e",
			"license": "MIT",
			"urls": [
				"bzz-raw://6246b3c95fb422853652f424ac673fca5a3b00195969f4a5b3c4689792e2bc10",
				"dweb:/ipfs/QmSMm7sQXgWw8pDJSMHmgSdozWFWe4mf7KuKD9zb1aG3TJ"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0x77c737760f492337656b881d9d93ff6421cb7c39dc8685f6c316ba9da575e403",
			"license": "MIT",
			"urls": [
				"bzz-raw://bccf894e3bb0e8feee23bfa93a2551fd014d5103db78030f5501d4205ea71251",
				"dweb:/ipfs/QmNoMiFSLCGFni9MGLJ4S14UStSruFreC193HpABcCJZJj"
			]
		},
		"contracts/libraries/Decimal.sol": {
			"keccak256": "0x2fec60644cca3c71c641fcecfd64f1890364f9b7f80c11df8db843dd9568537b",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://a4b07610e94b93fff587b28ea00b6413baeaeaf430cbe69267ac3c441cc30a2b",
				"dweb:/ipfs/QmPnvHKBi8bT8x3kdr7q6WLKcgPdyME3hde4MWPXFrNPCe"
			]
		},
		"contracts/libraries/SafeMathCopy.sol": {
			"keccak256": "0x405eae811de74343d616f4a9c140600a05736ddea397a8630e6800bd60d0ef97",
			"license": "MIT",
			"urls": [
				"bzz-raw://e964e656d56c2fb362f9b10cec26e681feefa389be639cf58e8ff4d821669c17",
				"dweb:/ipfs/Qmc6Y8HW9AohWzsuikupSxd5dsv1GZMf9NxChNM9Zqt6sg"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		}
	},
	"version": 1
}